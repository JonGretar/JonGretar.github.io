{
  "hash": "a0fbedcc4f5c489b3d77b5a2883438de",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Forests of Europe\"\ndescription: |\n  In this post I wish to continue a little bit with the TidyTuesday deforestation\n  data I worked with in the last post. The inspiration came from wanting to get \n  my hands dirty with map data and the sf package.\ndate: 2022-01-10\nbibliography: library.bib\nimage: index_files/figure-html/cover-1.png\ntoc: true\ncategories:\n  - R\n  - TidyTuesday\n  - Forestry\n  - GIS\n---\n\n\n\n\n\nFor this graph I wish to recreate a version of this excellent [example\nmap](https://github.com/davidsjoberg/ggbump#sigmoid-curves-examples) from the\nggbump[@ggbump] package. I find it to be a wonderful example of using maps in\ndata science and it is a great way to learn to use a few nice tricks in plot\ngeneration in ggplot. It would also be my entry into the world of using R for\ngeographic data and an excellent use of the Deforestation[@deforestation2021]\ndataset from TidyTuesday.\n\n![GDPR fines per capita Â© David Sjoberg](ranking_gdpr.png) The trick to\ngenerating this kind of chart is to play around with the coordinate system. We\nneed to transfer the bar generation into the latitude and the longitude of of\nthe map. I guess we could do it the other way and move the map coordinates to\nthe coordinates of a column chart but when working with map data it seems to be\nfar simpler to move everything else into their domain.\n\n## Themeing\n\nBefore we get into the map itself I wish to start by generating the theme\nseparately so we don't have to repeat it all over the code. I tend to separate\nthe theme from the plots a lot when I am repeating similar charts over a\ndocument.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_deforestation = function() {\n  theme_void() +\n  theme(\n    plot.margin = margin(.5, 1, .5, .5, \"cm\"),\n    plot.background = element_rect(fill = \"lightblue1\"),\n    plot.title = element_text(family = \"Roboto Condensed\", size = 18, hjust=0.5),\n    plot.caption = element_text(family = \"Roboto Condensed\", size = 6),\n    axis.text.y.left = element_blank(),\n    axis.text.x.bottom = element_blank(),\n    legend.position = \"none\",\n    text=element_text(family = \"Roboto Condensed\")\n  )\n}\n```\n:::\n\n\n\n## The map data\n\nFirst step is the use the `world` dataset from the spData[@spData] package to\nget a basic map of the world that we then filter to the European countries. We\nalso exclude Russia as the dataset does not tell us how much of the forest in\nRussia is located inside Europe.\n\nWe then use the `st_crop()` function from the sf[@sf] package to crop the chart\nto the area we wish to view. Then using `geom_sf` we render this chart in\nggplot2.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap <- world |> \n  filter(continent == \"Europe\", iso_a2 != \"RU\") |> \n  st_crop(xmin = -24, xmax = 40, ymin = 33, ymax = 74)\n\nggplot() +\n  geom_sf(data=map, color=\"lightblue1\", fill=\"forestgreen\") +\n  theme_deforestation()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nSo far so good. Next we need to convert those polygons into their centroid\npoints so we have something to link to when we create the path from the\ncountries to their corresponding bar labels. For that we use the\n`st_point_on_surface()` function to pull the data into sf points and then use\n`st_coordinates()` to convert those geometries to X and Y vectors. We then\nretrieve the country names back from the original dataset and plot the points\non top of the map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoints <- map |> \n  st_point_on_surface() |> \n  st_coordinates() |> \n  as_tibble() |> \n  mutate( country = map$name_long )\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"X\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"country\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"12.220766\",\"2\":\"64.63653\",\"3\":\"Norway\"},{\"1\":\"2.099228\",\"2\":\"46.89507\",\"3\":\"France\"},{\"1\":\"14.786243\",\"2\":\"62.27488\",\"3\":\"Sweden\"},{\"1\":\"27.786411\",\"2\":\"53.70604\",\"3\":\"Belarus\"},{\"1\":\"33.892773\",\"2\":\"48.30031\",\"3\":\"Ukraine\"},{\"1\":\"19.076267\",\"2\":\"51.88442\",\"3\":\"Poland\"},{\"1\":\"14.953150\",\"2\":\"47.91918\",\"3\":\"Austria\"},{\"1\":\"19.103248\",\"2\":\"47.24520\",\"3\":\"Hungary\"},{\"1\":\"28.649038\",\"2\":\"47.13761\",\"3\":\"Moldova\"},{\"1\":\"24.211692\",\"2\":\"46.03603\",\"3\":\"Romania\"},{\"1\":\"24.127801\",\"2\":\"55.09124\",\"3\":\"Lithuania\"},{\"1\":\"24.504423\",\"2\":\"56.89505\",\"3\":\"Latvia\"},{\"1\":\"25.561749\",\"2\":\"58.49808\",\"3\":\"Estonia\"},{\"1\":\"10.432351\",\"2\":\"51.43123\",\"3\":\"Germany\"},{\"1\":\"25.138533\",\"2\":\"42.73942\",\"3\":\"Bulgaria\"},{\"1\":\"21.806332\",\"2\":\"39.08046\",\"3\":\"Greece\"},{\"1\":\"19.967590\",\"2\":\"41.24790\",\"3\":\"Albania\"},{\"1\":\"15.583559\",\"2\":\"44.54481\",\"3\":\"Croatia\"},{\"1\":\"8.286516\",\"2\":\"46.80966\",\"3\":\"Switzerland\"},{\"1\":\"5.964413\",\"2\":\"49.71585\",\"3\":\"Luxembourg\"},{\"1\":\"4.737356\",\"2\":\"50.57968\",\"3\":\"Belgium\"},{\"1\":\"5.398113\",\"2\":\"52.04023\",\"3\":\"Netherlands\"},{\"1\":\"-8.367926\",\"2\":\"39.51082\",\"3\":\"Portugal\"},{\"1\":\"-3.444354\",\"2\":\"40.15423\",\"3\":\"Spain\"},{\"1\":\"-7.806699\",\"2\":\"53.51036\",\"3\":\"Ireland\"},{\"1\":\"12.631183\",\"2\":\"42.55822\",\"3\":\"Italy\"},{\"1\":\"9.460777\",\"2\":\"56.32431\",\"3\":\"Denmark\"},{\"1\":\"-1.753312\",\"2\":\"54.22469\",\"3\":\"United Kingdom\"},{\"1\":\"-18.457893\",\"2\":\"64.98805\",\"3\":\"Iceland\"},{\"1\":\"14.732281\",\"2\":\"46.12744\",\"3\":\"Slovenia\"},{\"1\":\"27.373290\",\"2\":\"65.03005\",\"3\":\"Finland\"},{\"1\":\"19.630114\",\"2\":\"48.71194\",\"3\":\"Slovakia\"},{\"1\":\"15.538166\",\"2\":\"49.75827\",\"3\":\"Czech Republic\"},{\"1\":\"18.115160\",\"2\":\"43.85310\",\"3\":\"Bosnia and Herzegovina\"},{\"1\":\"21.720351\",\"2\":\"41.68110\",\"3\":\"Macedonia\"},{\"1\":\"21.013475\",\"2\":\"44.13670\",\"3\":\"Serbia\"},{\"1\":\"19.396216\",\"2\":\"42.75050\",\"3\":\"Montenegro\"},{\"1\":\"20.913665\",\"2\":\"42.51393\",\"3\":\"Kosovo\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(points) +\n  geom_sf(data=map, color=\"lightblue1\", fill=\"forestgreen\") +\n  geom_point(aes(x=X, y=Y)) +\n  geom_text(\n    aes(x=X, y=Y, label=country), \n            hjust=0, nudge_x=1, check_overlap=TRUE\n  ) +\n  theme_deforestation()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Deforestation data\n\nNext up us to get the data from the deforestation dataset. We choose the year\n2020 and convert the percentage of world cover to millions of hectare. There is\nan estimate of 4.06 billion hectares of forests in the world.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nforest_area <- \n  tuesdata$forest_area |> \n  filter(year == 2020) |> \n  mutate(\n    forest_ha = 4200000000 * (forest_area/100) / 1000000\n  ) |> \n  select(entity, forest_ha)\n```\n:::\n\n\n\n## Putting it all together\n\nNow to the fun part. We join the forest_area and the point datasets. We then\nneed to use the `rescale()` function from the datawizard package[@datawizard]\nto convert the data to make coordinates on the plot.\n\nFor the y position we rank the rows by forest area and feed rescale the rank to\nfit between 40 and 70 giving us the y position of lines.\n\nFor the x positions of the columns we choose to start at 55 and then rescale\nthe forest area data to range between 55 and 130. We also need to define the\nold range to start at 0 as otherwise we will rescale the lowest ha number to\n55.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nline_data <-\n  points |> \n  left_join(forest_area, by=c(\"country\" = \"entity\")) |> \n  slice_max(forest_ha, n=15) |> \n  mutate(\n    col_y = rank(forest_ha) |> rescale(to=c(40, 70)),\n    sigmoid_end = 52,\n    col_x_start = 55,\n    col_x_end = forest_ha |> rescale(to=c(55, 130), range = c(0, max(forest_ha))),\n    area_label = paste0(round(forest_ha, 1), \" million ha\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nline_data |> paged_table()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"X\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"country\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"forest_ha\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"col_y\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sigmoid_end\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"col_x_start\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"col_x_end\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"area_label\"],\"name\":[9],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"14.786243\",\"2\":\"62.27488\",\"3\":\"Sweden\",\"4\":\"28.952431\",\"5\":\"70.00000\",\"6\":\"52\",\"7\":\"55\",\"8\":\"130.00000\",\"9\":\"29 million ha\"},{\"1\":\"27.373290\",\"2\":\"65.03005\",\"3\":\"Finland\",\"4\":\"23.187813\",\"5\":\"67.85714\",\"6\":\"52\",\"7\":\"55\",\"8\":\"115.06701\",\"9\":\"23.2 million ha\"},{\"1\":\"-3.444354\",\"2\":\"40.15423\",\"3\":\"Spain\",\"4\":\"19.217636\",\"5\":\"65.71429\",\"6\":\"52\",\"7\":\"55\",\"8\":\"104.78244\",\"9\":\"19.2 million ha\"},{\"1\":\"2.099228\",\"2\":\"46.89507\",\"3\":\"France\",\"4\":\"17.852619\",\"5\":\"63.57143\",\"6\":\"52\",\"7\":\"55\",\"8\":\"101.24643\",\"9\":\"17.9 million ha\"},{\"1\":\"12.220766\",\"2\":\"64.63653\",\"3\":\"Norway\",\"4\":\"12.603310\",\"5\":\"61.42857\",\"6\":\"52\",\"7\":\"55\",\"8\":\"87.64832\",\"9\":\"12.6 million ha\"},{\"1\":\"10.432351\",\"2\":\"51.43123\",\"3\":\"Germany\",\"4\":\"11.815862\",\"5\":\"59.28571\",\"6\":\"52\",\"7\":\"55\",\"8\":\"85.60847\",\"9\":\"11.8 million ha\"},{\"1\":\"33.892773\",\"2\":\"48.30031\",\"3\":\"Ukraine\",\"4\":\"10.026771\",\"5\":\"57.14286\",\"6\":\"52\",\"7\":\"55\",\"8\":\"80.97391\",\"9\":\"10 million ha\"},{\"1\":\"12.631183\",\"2\":\"42.55822\",\"3\":\"Italy\",\"4\":\"9.898596\",\"5\":\"55.00000\",\"6\":\"52\",\"7\":\"55\",\"8\":\"80.64188\",\"9\":\"9.9 million ha\"},{\"1\":\"19.076267\",\"2\":\"51.88442\",\"3\":\"Poland\",\"4\":\"9.812577\",\"5\":\"52.85714\",\"6\":\"52\",\"7\":\"55\",\"8\":\"80.41905\",\"9\":\"9.8 million ha\"},{\"1\":\"27.786411\",\"2\":\"53.70604\",\"3\":\"Belarus\",\"4\":\"9.072313\",\"5\":\"50.71429\",\"6\":\"52\",\"7\":\"55\",\"8\":\"78.50143\",\"9\":\"9.1 million ha\"},{\"1\":\"24.211692\",\"2\":\"46.03603\",\"3\":\"Romania\",\"4\":\"7.169866\",\"5\":\"48.57143\",\"6\":\"52\",\"7\":\"55\",\"8\":\"73.57322\",\"9\":\"7.2 million ha\"},{\"1\":\"21.806332\",\"2\":\"39.08046\",\"3\":\"Greece\",\"4\":\"4.037405\",\"5\":\"46.42857\",\"6\":\"52\",\"7\":\"55\",\"8\":\"65.45872\",\"9\":\"4 million ha\"},{\"1\":\"14.953150\",\"2\":\"47.91918\",\"3\":\"Austria\",\"4\":\"4.034663\",\"5\":\"44.28571\",\"6\":\"52\",\"7\":\"55\",\"8\":\"65.45162\",\"9\":\"4 million ha\"},{\"1\":\"25.138533\",\"2\":\"42.73942\",\"3\":\"Bulgaria\",\"4\":\"4.028299\",\"5\":\"42.14286\",\"6\":\"52\",\"7\":\"55\",\"8\":\"65.43513\",\"9\":\"4 million ha\"},{\"1\":\"24.504423\",\"2\":\"56.89505\",\"3\":\"Latvia\",\"4\":\"3.529330\",\"5\":\"40.00000\",\"6\":\"52\",\"7\":\"55\",\"8\":\"64.14258\",\"9\":\"3.5 million ha\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nWe then tie everything together.\n\nThe columns are generated using `geom_segment()` and the curved link between\nthem and the countries are generated using `geom_sigmoid()` from the ggbump\npackage.\n\nFor the color gradient I decided to use the \"VanGogh3\" color set from the\nexcellent MetBrewer package[@MetBrewer] that creates color palettes from some\nof the great works of art hanging in the Metropolitan Museum of Art in New\nYork.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(line_data) +\n  geom_sf(data=map, color=\"lightblue1\", fill=\"forestgreen\") +\n  geom_point(aes(x=X, y=Y, color=forest_ha)) +\n  geom_sigmoid(\n    aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)\n  ) +\n  geom_text(\n    aes(label=country, x=sigmoid_end, y=col_y), \n    hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8\n  ) +\n  geom_segment(\n    aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha), \n    size=3\n  ) +\n  geom_text(\n    aes(label=area_label, x=col_x_end, y=col_y), \n    hjust=0, size=2.2, nudge_x = .3\n  ) +\n  labs(\n    title=\"European countries with the largest forests\",\n    subtitle = \"\",\n    caption = \"Source: Our world in data \\nRussia excluded because of lack of fine grained data\"\n  ) +\n  coord_sf(clip = \"off\") +\n  scale_fill_gradientn(colors=met.brewer(\"VanGogh3\", type=\"continuous\")) +\n  scale_color_gradientn(colors=met.brewer(\"VanGogh3\", type=\"continuous\")) +\n  theme_deforestation()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/cover-1.png){fig-alt='Alter' width=768}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}